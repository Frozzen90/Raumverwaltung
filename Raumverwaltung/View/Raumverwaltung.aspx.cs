using Raumverwaltung.Models;
using System;
using System.Data;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace Raumverwaltung.View
{
    public partial class Raumverwaltung : System.Web.UI.Page
    {
        #region Eigenschaften
        private string _GateWayAddress;
        private int _UserRechte;
        private int _WorkID;
        #endregion

        #region Modifier
        public string GateWayAddress { get => _GateWayAddress; set => _GateWayAddress = value; }
        public int UserRechte { get => _UserRechte; set => _UserRechte = value; }
        public int WorkID { get => _WorkID; set => _WorkID = value; }
        #endregion

        #region Konstruktoren
        public Raumverwaltung()
        {
            GateWayAddress = null;
            UserRechte = -1;
            WorkID = -1;
        }

        public Raumverwaltung(string gateWayAddress)
        {
            GateWayAddress = gateWayAddress;
            UserRechte = -1;
            WorkID = -1;
        }

        public Raumverwaltung(string gateWayAddress, int userRechte)
        {
            GateWayAddress = gateWayAddress;
            UserRechte = userRechte;
            WorkID = -1;
        }
        #endregion

        #region Worker
        private bool GetGateway()
        {
            bool lGet = false;

            GateWayAddress = "";
            return lGet;
        }

        protected void Page_Load(object sender, EventArgs e)
        {
            int UserID = 0;

            //Get UserID noch imlpementieren
            CheckUserRole(UserID);
        }

        private void CheckUserRole(int UserID)
        {
            switch (UserID)
            {
                case 0:
                    SetAdminAuthority();
                    break;
                case 1:
                    SetVerwalterAuthority();
                    break;
                default:
                    SetNormalAuthority();
                    break;
            }
        }

        private void SetAdminAuthority()
        {
            Grid1.AutoGenerateDeleteButton = true;
            Grid1.AutoGenerateEditButton = true;
            Grid2.AutoGenerateDeleteButton = true;
            Grid2.AutoGenerateEditButton = true;
            btnAddPersZimmer.Visible = true;
            btnAddRaum.Visible = true;
        }

        private void SetVerwalterAuthority()
        {
            Grid1.AutoGenerateEditButton = true;
            Grid2.AutoGenerateDeleteButton = true;
            Grid2.AutoGenerateEditButton = true;
            btnAddPersZimmer.Visible = true;
            btnAddRaum.Visible = true;
        }

        private void SetNormalAuthority()
        {
            Grid1.AutoGenerateDeleteButton = false;
            Grid1.AutoGenerateEditButton = false;
            Grid2.AutoGenerateDeleteButton = false;
            Grid2.AutoGenerateEditButton = false;
            btnAddPersZimmer.Visible = false;
            btnAddRaum.Visible = false;
        }

        protected void btnHome_Click(object sender, ImageClickEventArgs e)
        {
            if (GetGateway())
            {
                Response.Redirect(_GateWayAddress);
            }
            else
            {
                //throw Message: "Gateway nicht erreichbar!"
            }
        }

        #region RaumWorker
        protected void btnAddRaum_Click(object sender, EventArgs e)
        {
            DataTable DataTab = (DataTable)Session["Grid1"];
            DataRow newDR = DataTab.NewRow();
            newDR[0] = "0";
            DataTab.Rows.Add(newDR);
            Grid1.EditIndex = DataTab.Rows.IndexOf(newDR);
            BindDataGrid1();
            Grid1.Rows[DataTab.Rows.IndexOf(newDR)].Cells[1].Enabled = false;
            btnAddRaum.Enabled = false;
        }

        private void BindDataGrid1()
        {
            Grid1.DataSource = Session["Grid1"];
            Grid1.DataBind();
        }

        protected void Grid1_Load(object sender, EventArgs e)
        {
            Grid1_Fuellen();
        }

        private void Grid1_Fuellen()
        {
            DataTable DT = new DataTable();
            //DT.Col[0]
            DataColumn Col = new DataColumn("ID");
            Col.DataType = System.Type.GetType("System.Int32");
            DT.Columns.Add(Col);
            //DT.Col[1]
            Col = new DataColumn("RaumtypID");
            Col.DataType = System.Type.GetType("System.Int32");
            DT.Columns.Add(Col);
            //DT.Col[2]
            Col = new DataColumn("Raumtyp");
            Col.DataType = System.Type.GetType("System.String");
            DT.Columns.Add(Col);
            //DT.Col[3]
            Col = new DataColumn("Betriebsstatus");
            Col.DataType = System.Type.GetType("System.Boolean");
            DT.Columns.Add(Col);

            foreach (Raum R in Global.cMainController.Raeume)
            {
                DataRow DR = DT.NewRow();
                DR[0] = R.rID;
                DR[1] = R.ZweckID;
                DR[2] = R.ZweckName;
                DR[3] = R.Betriebsstatus;
                DT.Rows.Add(DR);
            }
            Grid1.DataSource = DT;
            BindDataGrid1();
        }

        protected void Grid1_RowDeleting(object sender, System.Web.UI.WebControls.GridViewDeleteEventArgs e)
        {
            //Delete DS From Grid1



            btnAddRaum.Enabled = true;
        }

        protected void Grid1_RowEditing(object sender, System.Web.UI.WebControls.GridViewEditEventArgs e)
        {




            btnAddRaum.Enabled = true;
        }

        protected void Grid1_RowCancelingEdit(object sender, System.Web.UI.WebControls.GridViewCancelEditEventArgs e)
        {



            btnAddRaum.Enabled = true;
        }

        protected void Grid1_RowUpdating(object sender, System.Web.UI.WebControls.GridViewUpdateEventArgs e)
        {



            btnAddRaum.Enabled = true;
        }
        #endregion

        #region PZWorker
        protected void btnAddPersZimmer_Click(object sender, EventArgs e)
        {
            DataTable DataTab = (DataTable)Session["Grid2"];
            DataRow newDR = DataTab.NewRow();
            newDR[0] = "0";
            DataTab.Rows.Add(newDR);
            Grid2.EditIndex = DataTab.Rows.IndexOf(newDR);
            BindDataGrid1();
            Grid2.Rows[DataTab.Rows.IndexOf(newDR)].Cells[1].Enabled = false;
            btnAddPersZimmer.Enabled = false;
        }

        private void BindDataGrid2()
        {
            Grid1.DataSource = Session["Grid2"];
            Grid1.DataBind();
        }

        private void Grid2_Fuellen()
        {
            DataTable DT = new DataTable();
            //DT.Col[0]
            DataColumn Col = new DataColumn("ID");
            Col.DataType = System.Type.GetType("System.Int32");
            DT.Columns.Add(Col);
            //DT.Col[1]
            Col = new DataColumn("Betten belegt");
            Col.DataType = System.Type.GetType("System.Int32");
            DT.Columns.Add(Col);
            //DT.Col[2]
            Col = new DataColumn("Betten maximal");
            Col.DataType = System.Type.GetType("System.Int32");
            DT.Columns.Add(Col);

            foreach (Patientenzimmer P in Global.cMainController.Patientenzimmers)
            {
                DataRow DR = DT.NewRow();
                int DTID = DT.Rows.Count;
                DR[0] = P.pzID;
                DR[1] = P.BettenBelegt;
                DR[2] = P.BettenMaxAnzahl;
                DT.Rows.Add(DR);
            }
            Grid1.DataSource = DT;
            BindDataGrid2();
        }

        protected void Grid2_Load(object sender, EventArgs e)
        {
            Grid2_Fuellen();
        }

        protected void Grid2_RowDeleting(object sender, System.Web.UI.WebControls.GridViewDeleteEventArgs e)
        {
            //Delete DS From Grid2


            btnAddPersZimmer.Enabled = true;
        }

        protected void Grid2_RowEditing(object sender, System.Web.UI.WebControls.GridViewEditEventArgs e)
        {



            btnAddPersZimmer.Enabled = true;
        }

        protected void Grid2_RowCancelingEdit(object sender, System.Web.UI.WebControls.GridViewCancelEditEventArgs e)
        {



            btnAddPersZimmer.Enabled = true;
        }

        protected void Grid2_RowUpdating(object sender, System.Web.UI.WebControls.GridViewUpdateEventArgs e)
        {


            btnAddPersZimmer.Enabled = true;
        }
        #endregion

        #endregion

        protected void GridView1_Load(object sender, EventArgs e)
        {
            DataTable DataTab = (DataTable)Session["Grid2"];
        }

        protected void Grid3_Load(object sender, EventArgs e)
        {

        }
    }
}